<?php

namespace App\Exceptions;


use Illuminate\Validation\ValidationException;
use Illuminate\Database\QueryException;
use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;

use Throwable;

class Handler extends ExceptionHandler
{
    /**
     * The list of the inputs that are never flashed to the session on validation exceptions.
     *
     * @var array<int, string>
     */
    protected $dontFlash = [
        'current_password',
        'password',
        'password_confirmation',
    ];

    /**
     * Register the exception handling callbacks for the application.
     */
    public function register(): void
    {
        $this->reportable(function (Throwable $e) {
            //
        });
    }
    public function render($request, Throwable $exception)
    {


        // Manejo personalizado de ValidationException
        if ($exception instanceof ValidationException) {

            return response()->json([
                "error" => collect($exception->errors())->map(function ($message, $field) use ($exception) {
                    return [
                        'status' => '422',
                        'title' => __('Validation Error'),
                        'details' => $message[0],
                        'source' => [
                            'pointer' => '/data/attributes/' . $field
                        ]
                    ];
                })
            ]);        }

        if ($exception instanceof QueryException){
            return response()->json([
                'errors' => [
                    [
                        'status' => '500',
                        'title' => 'Database Error',
                        'detail' => 'Error procesando la respuesta. Inténtelo más tarde.'
                    ]
                ]
            ], 500);

        }
        return parent::render($request, $exception); // TODO: Change the autogenerated stub
    }
}
